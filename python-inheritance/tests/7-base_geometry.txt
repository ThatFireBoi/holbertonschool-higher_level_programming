>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = __import__('7-base_geometry').__doc__
>>> print(len(bg) > 0)
True

>>> bg = __import__('7-base_geometry').BaseGeometry.area.__doc__
>>> print(len(bg) > 0)
True

>>> bg = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
>>> print(len(bg) > 0)
True

>>> bg = BaseGeometry()

>>> bg.integer_validator("positive", 3)

>>> bg.integer_validator("negative", -3)
Traceback (most recent call last):
ValueError: negative must be greater than 0

>>> bg.integer_validator("char", 'a')
Traceback (most recent call last):
TypeError: char must be an integer

>>> bg.integer_validator("inf", float('inf'))
Traceback (most recent call last):
TypeError: inf must be an integer

>>> bg.integer_validator("none", None)
Traceback (most recent call last):
TypeError: none must be an integer

>>> bg.integer_validator("none2", )
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(, 12)
Traceback (most recent call last):
SyntaxError: invalid syntax

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name'
and 'value'
